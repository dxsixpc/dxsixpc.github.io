(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{609:function(n,s,t){"use strict";t.r(s);var e=t(4),a=Object(e.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("strong",[n._v("前言")])]),n._v(" "),t("p",[n._v("只要涉及到MVVM框架就不得不谈的知识点,但它毕竟是Vue的三要素之一.")]),n._v(" "),t("p",[t("strong",[n._v("Vue三要素")])]),n._v(" "),t("ul",[t("li",[n._v("响应式: 例如如何监听数据变化,其中的实现方法就是我们提到的双向绑定")]),n._v(" "),t("li",[n._v("模板引擎: 如何解析模板")]),n._v(" "),t("li",[n._v("渲染: Vue如何将监听到的数据变化和解析后的HTML进行渲染")])]),n._v(" "),t("p",[n._v("可以实现双向绑定的方法有很多,KnockoutJS基于观察者模式的双向绑定,Ember基于数据模型的双向绑定,Angular基于脏检查的双向绑定,本篇文章我们重点讲面试中常见的基于"),t("strong",[n._v("数据劫持")]),n._v("的双向绑定。")]),n._v(" "),t("p",[n._v("常见的基于数据劫持的双向绑定有两种实现,一个是目前Vue在用的"),t("code",[n._v("Object.defineProperty")]),n._v(",另一个是ES2015中新增的"),t("code",[n._v("Proxy")]),n._v(",而Vue的作者宣称将在Vue3.0版本后加入"),t("code",[n._v("Proxy")]),n._v("从而代替"),t("code",[n._v("Object.defineProperty")]),n._v(",通过本文你也可以知道为什么Vue未来会选择"),t("code",[n._v("Proxy")]),n._v("。")]),n._v(" "),t("blockquote",[t("p",[n._v("严格来讲Proxy应该被称为『代理』而非『劫持』,不过由于作用有很多相似之处,我们在下文中就不再做区分,统一叫『劫持』。")])]),n._v(" "),t("p",[n._v("我们可以通过下图清楚看到以上两种方法在"),t("strong",[n._v("双向绑定")]),n._v("体系中的关系.")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gfn6i1xhk4j30s406ijrw.jpg",alt:"img"}})]),n._v(" "),t("blockquote",[t("p",[n._v("基于数据劫持的当然还有已经凉透的"),t("code",[n._v("Object.observe")]),n._v("方法,已被废弃。")])]),n._v(" "),t("blockquote",[t("p",[t("strong",[n._v("提前声明:")]),n._v(" 我们没有对传入的参数进行及时判断而规避错误,仅仅对核心方法进行了实现.")])]),n._v(" "),t("hr"),n._v(" "),t("h3",{attrs:{id:"目录"}},[n._v("目录")]),n._v(" "),t("ol",[t("li",[n._v("基于数据劫持实现的双向绑定的特点")]),n._v(" "),t("li",[n._v("基于Object.defineProperty双向绑定的特点")]),n._v(" "),t("li",[n._v("基于Proxy双向绑定的特点")])]),n._v(" "),t("hr"),n._v(" "),t("h3",{attrs:{id:"_1-基于数据劫持实现的双向绑定的特点"}},[n._v("1.基于数据劫持实现的双向绑定的特点")]),n._v(" "),t("h4",{attrs:{id:"_1-1-什么是数据劫持"}},[n._v("1.1 什么是数据劫持")]),n._v(" "),t("p",[n._v("数据劫持比较好理解,通常我们利用"),t("code",[n._v("Object.defineProperty")]),n._v("劫持对象的访问器,在属性值发生变化时我们可以获取变化,从而进行进一步操作。")]),n._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 这是将要被劫持的对象")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("const")]),n._v(" data "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n  name"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("''")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("===")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'古天乐'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'给大家推荐一款超好玩的游戏'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("===")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'渣渣辉'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'戏我演过很多,可游戏我只玩贪玩懒月'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'来做我的兄弟'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 遍历对象,对其属性值进行劫持")]),n._v("\nObject"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("keys")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("forEach")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n  Object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("defineProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    enumerable"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n    configurable"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[n._v("get")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n      console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'get'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[n._v("set")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("newVal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 当属性值发生变化时我们可以进行额外操作")]),n._v("\n      console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[n._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("大家好,我系")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[n._v("${")]),n._v("newVal"),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[n._v("}")])]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[n._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("say")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("newVal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\ndata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v("'渣渣辉'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("//大家好,我系渣渣辉")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("//戏我演过很多,可游戏我只玩贪玩懒月")]),n._v("\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br")])]),t("h4",{attrs:{id:"_1-2-数据劫持的优势"}},[n._v("1.2 数据劫持的优势")]),n._v(" "),t("p",[n._v("目前业界分为两个大的流派,一个是以React为首的单向数据绑定,另一个是以Angular、Vue为主的双向数据绑定。")]),n._v(" "),t("blockquote",[t("p",[n._v("其实三大框架都是既可以双向绑定也可以单向绑定,比如React可以手动绑定onChange和value实现双向绑定,也可以调用一些双向绑定库,Vue也加入了props这种单向流的api,不过都并非主流卖点。")])]),n._v(" "),t("p",[n._v("单向或者双向的优劣不在我们的讨论范围,我们需要讨论一下对比其他双向绑定的实现方法,数据劫持的优势所在。")]),n._v(" "),t("ol",[t("li",[n._v("无需显示调用: 例如Vue运用数据劫持+发布订阅,直接可以通知变化并驱动视图,上面的例子也是比较简单的实现"),t("code",[n._v("data.name = '渣渣辉'")]),n._v("后直接触发变更,而比如Angular的脏检测则需要显示调用"),t("code",[n._v("markForCheck")]),n._v("(可以用zone.js避免显示调用,不展开),react需要显示调用"),t("code",[n._v("setState")]),n._v("。")]),n._v(" "),t("li",[n._v("可精确得知变化数据：还是上面的小例子，我们劫持了属性的setter,当属性值改变,我们可以精确获知变化的内容"),t("code",[n._v("newVal")]),n._v(",因此在这部分不需要额外的diff操作,否则我们只知道数据发生了变化而不知道具体哪些数据变化了,这个时候需要大量diff来找出变化值,这是额外性能损耗。")])]),n._v(" "),t("h4",{attrs:{id:"_1-3-基于数据劫持双向绑定的实现思路"}},[n._v("1.3 基于数据劫持双向绑定的实现思路")]),n._v(" "),t("p",[t("strong",[n._v("数据劫持")]),n._v("是双向绑定各种方案中比较流行的一种,最著名的实现就是Vue。")]),n._v(" "),t("p",[n._v("基于数据劫持的双向绑定离不开"),t("code",[n._v("Proxy")]),n._v("与"),t("code",[n._v("Object.defineProperty")]),n._v('等方法对对象/对象属性的"劫持",我们要实现一个完整的双向绑定需要以下几个要点。')]),n._v(" "),t("ol",[t("li",[n._v("利用"),t("code",[n._v("Proxy")]),n._v("或"),t("code",[n._v("Object.defineProperty")]),n._v('生成的Observer针对对象/对象的属性进行"劫持",在属性发生变化后通知订阅者')]),n._v(" "),t("li",[n._v("解析器Compile解析模板中的"),t("code",[n._v("Directive")]),n._v("(指令)，收集指令所依赖的方法和数据,等待数据变化然后进行渲染")]),n._v(" "),t("li",[n._v("Watcher属于Observer和Compile桥梁,它将接收到的Observer产生的数据变化,并根据Compile提供的指令进行视图渲染,使得数据变化促使视图变化")])]),n._v(" "),t("p",[t("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gfn6ionml8j30jr0akabj.jpg",alt:"img"}})]),n._v(" "),t("blockquote",[t("p",[n._v("我们看到，虽然Vue运用了数据劫持，但是依然离不开"),t("strong",[n._v("发布订阅")]),n._v("的模式，之所以在系列2做了"),t("a",{attrs:{href:"https://juejin.im/post/5ac2fb886fb9a028b86e328c",target:"_blank",rel:"noopener noreferrer"}},[n._v("Event Bus的实现"),t("OutboundLink")],1),n._v(",就是因为我们不管在学习一些框架的原理还是一些流行库（例如Redux、Vuex）,基本上都离不开"),t("strong",[n._v("发布订阅")]),n._v("模式,而"),t("em",[n._v("Event")]),n._v("模块则是此模式的经典实现,所以如果不熟悉"),t("strong",[n._v("发布订阅")]),n._v("模式,建议读一下系列2的文章。")])]),n._v(" "),t("hr"),n._v(" "),t("h3",{attrs:{id:"_2-基于object-defineproperty双向绑定的特点"}},[n._v("2.基于Object.defineProperty双向绑定的特点")]),n._v(" "),t("p",[n._v("关于"),t("code",[n._v("Object.defineProperty")]),n._v("的文章在网络上已经汗牛充栋,我们不想花过多时间在"),t("code",[n._v("Object.defineProperty")]),n._v("上面,本节我们主要讲解"),t("code",[n._v("Object.defineProperty")]),n._v("的特点,方便接下来与"),t("code",[n._v("Proxy")]),n._v("进行对比。")]),n._v(" "),t("blockquote",[t("p",[n._v("对"),t("code",[n._v("Object.defineProperty")]),n._v("还不了解的请阅读"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[n._v("文档"),t("OutboundLink")],1)])]),n._v(" "),t("p",[n._v("两年前就有人写过基于"),t("code",[n._v("Object.defineProperty")]),n._v("实现的"),t("a",{attrs:{href:"https://segmentfault.com/a/1190000006599500",target:"_blank",rel:"noopener noreferrer"}},[n._v("文章"),t("OutboundLink")],1),n._v(",想深入理解"),t("code",[n._v("Object.defineProperty")]),n._v("实现的推荐阅读,本文也做了相关参考。")]),n._v(" "),t("blockquote",[t("p",[n._v("上面我们推荐的文章为比较完整的实现(400行代码),我们在本节只提供一个极简版(20行)和一个简化版(150行)的实现,读者可以循序渐进地阅读。")])]),n._v(" "),t("h4",{attrs:{id:"_2-1-极简版的双向绑定"}},[n._v("2.1 极简版的双向绑定")]),n._v(" "),t("p",[n._v("我们都知道,"),t("code",[n._v("Object.defineProperty")]),n._v("的作用就是劫持一个对象的属性,通常我们对属性的"),t("code",[n._v("getter")]),n._v("和"),t("code",[n._v("setter")]),n._v("方法进行劫持,在对象的属性发生变化时进行特定的操作。")]),n._v(" "),t("p",[n._v("我们就对对象"),t("code",[n._v("obj")]),n._v("的"),t("code",[n._v("text")]),n._v("属性进行劫持,在获取此属性的值时打印"),t("code",[n._v("'get val'")]),n._v(",在更改属性值的时候对DOM进行操作,这就是一个极简的双向绑定。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("const obj = {};\nObject.defineProperty(obj, 'text', {\n  get: function() {\n    console.log('get val');&emsp;\n  },\n  set: function(newVal) {\n    console.log('set val:' + newVal);\n    document.getElementById('input').value = newVal;\n    document.getElementById('span').innerHTML = newVal;\n  }\n});\n\nconst input = document.getElementById('input');\ninput.addEventListener('keyup', function(e){\n  obj.text = e.target.value;\n})\n\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br")])]),t("p",[n._v("在线示例 "),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu/pen/gzmEab/",target:"_blank",rel:"noopener noreferrer"}},[n._v("极简版双向绑定"),t("OutboundLink")],1),n._v(" by Iwobi ("),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu",target:"_blank",rel:"noopener noreferrer"}},[n._v("@xiaomuzhu"),t("OutboundLink")],1),n._v(") on "),t("a",{attrs:{href:"https://codepen.io",target:"_blank",rel:"noopener noreferrer"}},[n._v("CodePen"),t("OutboundLink")],1),n._v(".")]),n._v(" "),t("h4",{attrs:{id:"_2-2-升级改造"}},[n._v("2.2 升级改造")]),n._v(" "),t("p",[n._v("我们很快会发现，这个所谓的"),t("em",[n._v("双向绑定")]),n._v("貌似并没有什么乱用。。。")]),n._v(" "),t("p",[n._v("原因如下:")]),n._v(" "),t("ol",[t("li",[n._v("我们只监听了一个属性,一个对象不可能只有一个属性,我们需要对对象每个属性进行监听。")]),n._v(" "),t("li",[n._v("违反开放封闭原则,我们如果了解"),t("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[n._v("开放封闭原则"),t("OutboundLink")],1),n._v("的话,上述代码是明显违反此原则,我们每次修改都需要进入方法内部,这是需要坚决杜绝的。")]),n._v(" "),t("li",[n._v("代码耦合严重,我们的数据、方法和DOM都是耦合在一起的，就是传说中的面条代码。")])]),n._v(" "),t("p",[n._v("那么如何解决上述问题？")]),n._v(" "),t("p",[n._v("Vue的操作就是加入了"),t("strong",[n._v("发布订阅")]),n._v("模式，结合"),t("code",[n._v("Object.defineProperty")]),n._v("的劫持能力，实现了可用性很高的双向绑定。")]),n._v(" "),t("p",[n._v("首先，我们以"),t("strong",[n._v("发布订阅")]),n._v("的角度看我们第一部分写的那一坨代码,会发现它的"),t("em",[n._v("监听")]),n._v("、"),t("em",[n._v("发布")]),n._v("和"),t("em",[n._v("订阅")]),n._v("都是写在一起的,我们首先要做的就是解耦。")]),n._v(" "),t("p",[n._v("我们先实现一个订阅发布中心，即消息管理员（Dep）,它负责储存订阅者和消息的分发,不管是订阅者还是发布者都需要依赖于它。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("  let uid = 0;\n  // 用于储存订阅者并发布消息\n  class Dep {\n    constructor() {\n      // 设置id,用于区分新Watcher和只改变属性值后新产生的Watcher\n      this.id = uid++;\n      // 储存订阅者的数组\n      this.subs = [];\n    }\n    // 触发target上的Watcher中的addDep方法,参数为dep的实例本身\n    depend() {\n      Dep.target.addDep(this);\n    }\n    // 添加订阅者\n    addSub(sub) {\n      this.subs.push(sub);\n    }\n    notify() {\n      // 通知所有的订阅者(Watcher)，触发订阅者的相应逻辑处理\n      this.subs.forEach(sub => sub.update());\n    }\n  }\n  // 为Dep类设置一个静态属性,默认为null,工作时指向当前的Watcher\n  Dep.target = null;\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br")])]),t("p",[n._v("现在我们需要实现监听者(Observer),用于监听属性值的变化。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 监听者,监听对象属性值的变化\n  class Observer {\n    constructor(value) {\n      this.value = value;\n      this.walk(value);\n    }\n    // 遍历属性值并监听\n    walk(value) {\n      Object.keys(value).forEach(key => this.convert(key, value[key]));\n    }\n    // 执行监听的具体方法\n    convert(key, val) {\n      defineReactive(this.value, key, val);\n    }\n  }\n\n  function defineReactive(obj, key, val) {\n    const dep = new Dep();\n    // 给当前属性的值添加监听\n    let chlidOb = observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: () => {\n        // 如果Dep类存在target属性，将其添加到dep实例的subs数组中\n        // target指向一个Watcher实例，每个Watcher都是一个订阅者\n        // Watcher实例在实例化过程中，会读取data中的某个属性，从而触发当前get方法\n        if (Dep.target) {\n          dep.depend();\n        }\n        return val;\n      },\n      set: newVal => {\n        if (val === newVal) return;\n        val = newVal;\n        // 对新值进行监听\n        chlidOb = observe(newVal);\n        // 通知所有订阅者，数值被改变了\n        dep.notify();\n      },\n    });\n  }\n\n  function observe(value) {\n    // 当值不存在，或者不是复杂数据类型时，不再需要继续深入监听\n    if (!value || typeof value !== 'object') {\n      return;\n    }\n    return new Observer(value);\n  }\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br")])]),t("p",[n._v("那么接下来就简单了,我们需要实现一个订阅者(Watcher)。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("  class Watcher {\n    constructor(vm, expOrFn, cb) {\n      this.depIds = {}; // hash储存订阅者的id,避免重复的订阅者\n      this.vm = vm; // 被订阅的数据一定来自于当前Vue实例\n      this.cb = cb; // 当数据更新时想要做的事情\n      this.expOrFn = expOrFn; // 被订阅的数据\n      this.val = this.get(); // 维护更新之前的数据\n    }\n    // 对外暴露的接口，用于在订阅的数据被更新时，由订阅者管理员(Dep)调用\n    update() {\n      this.run();\n    }\n    addDep(dep) {\n      // 如果在depIds的hash中没有当前的id,可以判断是新Watcher,因此可以添加到dep的数组中储存\n      // 此判断是避免同id的Watcher被多次储存\n      if (!this.depIds.hasOwnProperty(dep.id)) {\n        dep.addSub(this);\n        this.depIds[dep.id] = dep;\n      }\n    }\n    run() {\n      const val = this.get();\n      console.log(val);\n      if (val !== this.val) {\n        this.val = val;\n        this.cb.call(this.vm, val);\n      }\n    }\n    get() {\n      // 当前订阅者(Watcher)读取被订阅数据的最新更新后的值时，通知订阅者管理员收集当前订阅者\n      Dep.target = this;\n      const val = this.vm._data[this.expOrFn];\n      // 置空，用于下一个Watcher使用\n      Dep.target = null;\n      return val;\n    }\n  }\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br")])]),t("p",[n._v("那么我们最后完成Vue,将上述方法挂载在Vue上。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("  class Vue {\n    constructor(options = {}) {\n      // 简化了$options的处理\n      this.$options = options;\n      // 简化了对data的处理\n      let data = (this._data = this.$options.data);\n      // 将所有data最外层属性代理到Vue实例上\n      Object.keys(data).forEach(key => this._proxy(key));\n      // 监听数据\n      observe(data);\n    }\n    // 对外暴露调用订阅者的接口，内部主要在指令中使用订阅者\n    $watch(expOrFn, cb) {\n      new Watcher(this, expOrFn, cb);\n    }\n    _proxy(key) {\n      Object.defineProperty(this, key, {\n        configurable: true,\n        enumerable: true,\n        get: () => this._data[key],\n        set: val => {\n          this._data[key] = val;\n        },\n      });\n    }\n  }\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br")])]),t("p",[n._v("看下效果:")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gfn6j7k6dyj306f02la9z.jpg",alt:"img"}})]),n._v(" "),t("p",[n._v("在线示例 "),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu/pen/jxBRgj/",target:"_blank",rel:"noopener noreferrer"}},[n._v("双向绑定实现---无漏洞版"),t("OutboundLink")],1),n._v(" by Iwobi ("),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu",target:"_blank",rel:"noopener noreferrer"}},[n._v("@xiaomuzhu"),t("OutboundLink")],1),n._v(") on "),t("a",{attrs:{href:"https://codepen.io",target:"_blank",rel:"noopener noreferrer"}},[n._v("CodePen"),t("OutboundLink")],1),n._v(".")]),n._v(" "),t("p",[n._v("至此,一个简单的双向绑定算是被我们实现了。")]),n._v(" "),t("h4",{attrs:{id:"_2-3-object-defineproperty的缺陷"}},[n._v("2.3 Object.defineProperty的缺陷")]),n._v(" "),t("p",[n._v("其实我们升级版的双向绑定依然存在漏洞,比如我们将属性值改为数组。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("let demo = new Vue({\n  data: {\n    list: [1],\n  },\n});\n\nconst list = document.getElementById('list');\nconst btn = document.getElementById('btn');\n\nbtn.addEventListener('click', function() {\n  demo.list.push(1);\n});\n\n\nconst render = arr => {\n  const fragment = document.createDocumentFragment();\n  for (let i = 0; i < arr.length; i++) {\n    const li = document.createElement('li');\n    li.textContent = arr[i];\n    fragment.appendChild(li);\n  }\n  list.appendChild(fragment);\n};\n\n// 监听数组,每次数组变化则触发渲染函数,然而...无法监听\ndemo.$watch('list', list => render(list));\n\nsetTimeout(\n  function() {\n    alert(demo.list);\n  },\n  5000,\n);\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br")])]),t("p",[n._v("在线示例 "),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu/pen/NMjKxV/",target:"_blank",rel:"noopener noreferrer"}},[n._v("双向绑定-数组漏洞"),t("OutboundLink")],1),n._v(" by Iwobi ("),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu",target:"_blank",rel:"noopener noreferrer"}},[n._v("@xiaomuzhu"),t("OutboundLink")],1),n._v(") on "),t("a",{attrs:{href:"https://codepen.io",target:"_blank",rel:"noopener noreferrer"}},[n._v("CodePen"),t("OutboundLink")],1),n._v(".")]),n._v(" "),t("p",[n._v("是的,"),t("code",[n._v("Object.defineProperty")]),n._v("的第一个缺陷,无法监听数组变化。 然而"),t("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/list.html#%E6%95%B0%E7%BB%84%E6%9B%B4%E6%96%B0%E6%A3%80%E6%B5%8B",target:"_blank",rel:"noopener noreferrer"}},[n._v("Vue的文档"),t("OutboundLink")],1),n._v("提到了Vue是可以检测到数组变化的，但是只有以下八种方法,"),t("code",[n._v("vm.items[indexOfItem] = newValue")]),n._v("这种是无法检测的。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("push()\npop()\nshift()\nunshift()\nsplice()\nsort()\nreverse()\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br")])]),t("p",[n._v("其实作者在这里用了一些奇技淫巧,把无法监听数组的情况hack掉了,以下是方法示例。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("const aryMethods = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];\nconst arrayAugmentations = [];\n\naryMethods.forEach((method)=> {\n\n    // 这里是原生Array的原型方法\n    let original = Array.prototype[method];\n\n   // 将push, pop等封装好的方法定义在对象arrayAugmentations的属性上\n   // 注意：是属性而非原型属性\n    arrayAugmentations[method] = function () {\n        console.log('我被改变啦!');\n\n        // 调用对应的原生方法并返回结果\n        return original.apply(this, arguments);\n    };\n\n});\n\nlet list = ['a', 'b', 'c'];\n// 将我们要监听的数组的原型指针指向上面定义的空数组对象\n// 别忘了这个空数组的属性上定义了我们封装好的push等方法\nlist.__proto__ = arrayAugmentations;\nlist.push('d');  // 我被改变啦！ 4\n\n// 这里的list2没有被重新定义原型指针，所以就正常输出\nlet list2 = ['a', 'b', 'c'];\nlist2.push('d');  // 4\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br")])]),t("p",[n._v("由于只针对了八种方法进行了hack,所以其他数组的属性也是检测不到的,其中的坑很多,可以阅读上面提到的文档。")]),n._v(" "),t("p",[n._v("我们应该注意到在上文中的实现里,我们多次用遍历方法遍历对象的属性，这就引出了"),t("code",[n._v("Object.defineProperty")]),n._v("的第二个缺陷,只能劫持对象的属性,因此我们需要对每个对象的每个属性进行遍历，如果属性值也是对象那么需要深度遍历,显然能劫持一个完整的对象是更好的选择。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("Object.keys(value).forEach(key => this.convert(key, value[key]));\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("hr"),n._v(" "),t("h3",{attrs:{id:"_3-proxy实现的双向绑定的特点"}},[n._v("3.Proxy实现的双向绑定的特点")]),n._v(" "),t("p",[n._v("Proxy在ES2015规范中被正式发布,它在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写,我们可以这样认为,Proxy是"),t("code",[n._v("Object.defineProperty")]),n._v("的全方位加强版,具体的文档可以查看"),t("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/proxy",target:"_blank",rel:"noopener noreferrer"}},[n._v("此处"),t("OutboundLink")],1),n._v(";")]),n._v(" "),t("h4",{attrs:{id:"_3-1-proxy可以直接监听对象而非属性"}},[n._v("3.1 Proxy可以直接监听对象而非属性")]),n._v(" "),t("p",[n._v("我们还是以上文中用"),t("code",[n._v("Object.defineProperty")]),n._v("实现的极简版双向绑定为例,用Proxy进行改写。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("const input = document.getElementById('input');\nconst p = document.getElementById('p');\nconst obj = {};\n\nconst newObj = new Proxy(obj, {\n  get: function(target, key, receiver) {\n    console.log(`getting ${key}!`);\n    return Reflect.get(target, key, receiver);\n  },\n  set: function(target, key, value, receiver) {\n    console.log(target, key, value, receiver);\n    if (key === 'text') {\n      input.value = value;\n      p.innerHTML = value;\n    }\n    return Reflect.set(target, key, value, receiver);\n  },\n});\n\ninput.addEventListener('keyup', function(e) {\n  newObj.text = e.target.value;\n});\n\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br")])]),t("p",[n._v("在线示例 "),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu/pen/KRmwRE/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Proxy版"),t("OutboundLink")],1),n._v(" by Iwobi ("),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu",target:"_blank",rel:"noopener noreferrer"}},[n._v("@xiaomuzhu"),t("OutboundLink")],1),n._v(") on "),t("a",{attrs:{href:"https://codepen.io",target:"_blank",rel:"noopener noreferrer"}},[n._v("CodePen"),t("OutboundLink")],1),n._v(".")]),n._v(" "),t("p",[n._v("我们可以看到,Proxy直接可以劫持整个对象,并返回一个新对象,不管是操作便利程度还是底层功能上都远强于"),t("code",[n._v("Object.defineProperty")]),n._v("。")]),n._v(" "),t("h4",{attrs:{id:"_3-2-proxy可以直接监听数组的变化"}},[n._v("3.2 Proxy可以直接监听数组的变化")]),n._v(" "),t("p",[n._v("当我们对数组进行操作(push、shift、splice等)时，会触发对应的方法名称和"),t("em",[n._v("length")]),n._v("的变化，我们可以借此进行操作,以上文中"),t("code",[n._v("Object.defineProperty")]),n._v("无法生效的列表渲染为例。")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("const list = document.getElementById('list');\nconst btn = document.getElementById('btn');\n\n// 渲染列表\nconst Render = {\n  // 初始化\n  init: function(arr) {\n    const fragment = document.createDocumentFragment();\n    for (let i = 0; i < arr.length; i++) {\n      const li = document.createElement('li');\n      li.textContent = arr[i];\n      fragment.appendChild(li);\n    }\n    list.appendChild(fragment);\n  },\n  // 我们只考虑了增加的情况,仅作为示例\n  change: function(val) {\n    const li = document.createElement('li');\n    li.textContent = val;\n    list.appendChild(li);\n  },\n};\n\n// 初始数组\nconst arr = [1, 2, 3, 4];\n\n// 监听数组\nconst newArr = new Proxy(arr, {\n  get: function(target, key, receiver) {\n    console.log(key);\n    return Reflect.get(target, key, receiver);\n  },\n  set: function(target, key, value, receiver) {\n    console.log(target, key, value, receiver);\n    if (key !== 'length') {\n      Render.change(value);\n    }\n    return Reflect.set(target, key, value, receiver);\n  },\n});\n\n// 初始化\nwindow.onload = function() {\n    Render.init(arr);\n}\n\n// push数字\nbtn.addEventListener('click', function() {\n  newArr.push(6);\n});\n复制代码\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br")])]),t("p",[n._v("在线示例 "),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu/pen/zjwGoN/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Proxy列表渲染"),t("OutboundLink")],1),n._v(" by Iwobi ("),t("a",{attrs:{href:"https://codepen.io/xiaomuzhu",target:"_blank",rel:"noopener noreferrer"}},[n._v("@xiaomuzhu"),t("OutboundLink")],1),n._v(") on "),t("a",{attrs:{href:"https://codepen.io",target:"_blank",rel:"noopener noreferrer"}},[n._v("CodePen"),t("OutboundLink")],1),n._v(".")]),n._v(" "),t("p",[n._v("很显然,Proxy不需要那么多hack（即使hack也无法完美实现监听）就可以无压力监听数组的变化,我们都知道,标准永远优先于hack。")]),n._v(" "),t("h4",{attrs:{id:"_3-3-proxy的其他优势"}},[n._v("3.3 Proxy的其他优势")]),n._v(" "),t("p",[n._v("Proxy有多达13种拦截方法,不限于apply、ownKeys、deleteProperty、has等等是"),t("code",[n._v("Object.defineProperty")]),n._v("不具备的。")]),n._v(" "),t("p",[n._v("Proxy返回的是一个新对象,我们可以只操作新的对象达到目的,而"),t("code",[n._v("Object.defineProperty")]),n._v("只能遍历对象属性直接修改。")]),n._v(" "),t("p",[n._v("Proxy作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利。")]),n._v(" "),t("p",[n._v("当然,Proxy的劣势就是兼容性问题,而且无法用polyfill磨平,因此Vue的作者才声明需要等到下个大版本(3.0)才能用Proxy重写。")]),n._v(" "),t("p",[n._v("作者：寻找海蓝96\n链接：https://juejin.im/post/5acd0c8a6fb9a028da7cdfaf\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")])])}),[],!1,null,null,null);s.default=a.exports}}]);